
1. Pick up a machine (e.g. arthur) from which you want to run
   the MPI root node. Login to the machine.

   Use
       arthur> ssh-keygen -t rsa
   and type a passphrase to generate an RSA key pair under 
   the default directory ~/.ssh/id_rsa. 

2. Add this key to authorized keys:
       arthur> cd .ssh
       arthur> cat id_rsa.pub >> authorized_keys (if authorized_keys exists)
                      or
               cp id_rsa.pub authorized_keys (if authorized_keys not exists)


3. Edit the .cshrc file under your home directory and put the
   following :

# keychain for mpi app
if (-e /usr/bin/keychain) then
           keychain --nogui -q id_rsa
           set host=`uname -n`
           if (-f $HOME/.keychain/$host-csh) then
                   source $HOME/.keychain/$host-csh
           endif
           if (-f $HOME/.keychain/$host-csh-gpg) then
                   source $HOME/.keychain/$host-csh-gpg
           endif
endif


4. To test passwordless SSH login (from arthur), 
       arthur>  ssh bach
   and type the passphrase. Exit the machine bach and login again.
   You won't be asked for the passphrase the second time.

5. To test MPI programs, use an editor to build the
    program mpi_hello.c (see below). 

   Compile it:
      mpicc -o mpi_hello mpi_hello.c 
   
   Use an editor to type the machine names into the file machinefile:
     arthur:1
     bach:1
     chopin:1
     degas:1

   Run it on a single machine:
     mpirun -n 2 ./mpi_hello
   Note that the parameter next to -n specifies the number of processes 
   to spawn and distribute among nodes

   Run it among several machines specified in the file machinefile:
     mpirun -n 2 -f machinefile ./mpi_hello 
     mpirun -n 8 -f machinefile ./mpi_hello 

-------------------- mpi_hello.c -----------------

#include <stdio.h>
#include <mpi.h>

int main(int argc, char** argv) {
    int myrank, nprocs;

    char hostname[256];
    gethostname(hostname, 256);
    
    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
    MPI_Comm_rank(MPI_COMM_WORLD, &myrank);

    printf("Hello from %s processor %d of %d\n", hostname, myrank, nprocs);

    MPI_Finalize();
    return 0;
}

